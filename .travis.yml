# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=fontbuild

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-gnu

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: GatRG7GRxHPJ7Qab1n9y3XvDd/c7PnG6J+vYK6PVxxD2YWBhIIxlVZV5Ni3I2ysm6kQLnrbLnIFMBS01pAjwGwmHauhmEKRVjt5VFmNIP17JA5XC7fglOvXbyU7wj30fPUvDoFwf28NzincJfHwfw9Hy9jenwxZg4Ds80ayZacV26Mw63CD9/BPkRFaNwWHroZm1kB01f10HxsgmaLEILyjQyHI7zUpmbBZhsL9Izlaml7H6SXOJ6Fz+bXhwm0wgaPUfsbi4M4qUq6+fI6e8QWYjkRASZkORNPpRLfnlISpvR6OwqBGa8HkprOwlOEkH6zVReP6rgTeP9cL94Up9n+gQBh11VecuD7gCJQWnFJbGACtWADClXTpiXI7mX5Oqo3e6t8g5rT/LktRicWRg2iAUNO1S4DqF36EC0v9DrrX6OFu7f7fvQJztaQR6/xE6hI937fTDQhuGDdhYHUetrPcsuYFXiiSquNS+jsGI6N9rnptR2k9u74UJx4nMn8NroK9wYQw3Qtn4c2CKAm3VEA+drP7Vk73bfF0WXLx1KPQOn8xM42q7DB0IvE1XTkVw7xQZWR3/YH4jsB95gjeMODA2EArt/IN5BuQrgpIk30k5NjHiH0S++HN5uGwqGsrPo1+YkkkgL18ia4TJB8AQubXjeGiicI8UyhS8nbOcxks=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
